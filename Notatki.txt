"Zajęcia 2. Cykl_zycia_systemu_informatycznego"
Cykl życia systemu informatycznego:
1. Planowanie
2. Analiza
3. Projektowanie
4. Implementacja
5. Testowanie
6. Wdrożenie
7. Eksploatacja i utrzymanie
8. Wycofanie

Zalety poznania etapów:
1. Koncepcje cyklu życia systemu informatycznego można stosować również dla innych produktów
2. Jest to logiczny ciąg działań potrzebnych dla stworzenia systemu informatycznego w przemyślany sposób co może być przydatne
3. Ciekawe jest to, że cykl życia systemu informatycznego różni się od cyklu życia projektu systemu, który kończy się już testowaniem

Cykl procesu analizy danych jest podobny. Są różnice, ale widoczne też są analogie.

Zadanie 3

# Zadanie: rozsypanka
# Rozwiązanie (kod) nie jest uporządkowane. Zidentyfikuj kolejność i uporządkuj proces implementacji i kodoania tworzenia systemu informatycznego, a następnie uruchom kod i wykonaj analizy dla obu plików tekstowych (przemówień Bidena z 2021 i 2024). Czy priorytety wykryte w obu przemówieniach są podobne czy różnią się?
#   
  
# Wczytaj dane tekstowe
# Wczytaj plik tekstowy z lokalnego dysku
text <- readLines(file.choose())
text

frequent_terms <- freq_terms(text)
frequent_terms
frequent_terms <- freq_terms(text, stopwords = Top200Words)
plot(frequent_terms)

# Tworzenie chmury słów za pomocą pakietu wordcloud
install.packages("wordcloud")
library(wordcloud)

# Opcje chmury słów
?wordcloud
# Zmiana wartości min.freq i max.words w celu wyświetlenia mniejszej/większej liczby słów.
# min.freq: słowa o częstości poniżej tej wartości nie będą wyświetlane
# max.words: maksymalna liczba słów do wyświetlenia

  # Dodanie różnych palet kolorystycznych
  wordcloud(frequent_terms$WORD, frequent_terms$FREQ, min.freq = 4, colors = brewer.pal(9,"Blues"))
wordcloud(frequent_terms$WORD, frequent_terms$FREQ, min.freq = 4, colors = brewer.pal(9,"Reds"))
wordcloud(frequent_terms$WORD, frequent_terms$FREQ, min.freq = 4, colors = brewer.pal(9,"Greens"))

# Utwórz chmurę słów
wordcloud(frequent_terms$WORD, frequent_terms$FREQ)

# Ograniczenie liczby słów w chmurze poprzez określenie minimalnej częstości
wordcloud(frequent_terms$WORD, frequent_terms$FREQ, min.freq = 4)

# Ograniczenie liczby słów w chmurze poprzez określenie maksymalnej liczby słów
wordcloud(frequent_terms$WORD, frequent_terms$FREQ, max.words = 5)

# Optymalizacja i dostosowanie wyników
# Dodanie koloru do chmury słów dla lepszej wizualizacji
# Dodanie koloru
wordcloud(frequent_terms$WORD, frequent_terms$FREQ, min.freq = 4, colors = brewer.pal(8,"Dark2"))
# Dodanie koloru
wordcloud(frequent_terms$WORD, frequent_terms$FREQ, max.words = 5, colors = brewer.pal(8,"Accent"))
?brewer.pal
brewer.pal.info



